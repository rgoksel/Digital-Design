$date
   Tue Nov 28 21:42:33 2023
$end
$version
  2023.1
$end
$timescale
  1ps
$end
$scope module tb_counter $end
$var reg 1 ! clk $end
$var wire 8 " leds [7:0] $end
$scope module counter1 $end
$var wire 1 # clk $end
$var reg 8 $ leds [7:0] $end
$var wire 1 % carry_1 $end
$var wire 8 & sum_1 [7:0] $end
$scope module adder $end
$var wire 8 $ A [7:0] $end
$var wire 8 ' B [7:0] $end
$var wire 1 ( Cin $end
$var wire 8 & Sum [7:0] $end
$var wire 1 % Cout $end
$var wire 9 ) c [8:0] $end
$scope module ripplecarry_adder_loop[0].fa $end
$var wire 1 * A $end
$var wire 1 + B $end
$var wire 1 , Cin $end
$var wire 1 - Sum $end
$var wire 1 . Cout $end
$upscope $end
$scope module ripplecarry_adder_loop[1].fa $end
$var wire 1 / A $end
$var wire 1 0 B $end
$var wire 1 1 Cin $end
$var wire 1 2 Sum $end
$var wire 1 3 Cout $end
$upscope $end
$scope module ripplecarry_adder_loop[2].fa $end
$var wire 1 4 A $end
$var wire 1 5 B $end
$var wire 1 6 Cin $end
$var wire 1 7 Sum $end
$var wire 1 8 Cout $end
$upscope $end
$scope module ripplecarry_adder_loop[3].fa $end
$var wire 1 9 A $end
$var wire 1 : B $end
$var wire 1 ; Cin $end
$var wire 1 < Sum $end
$var wire 1 = Cout $end
$upscope $end
$scope module ripplecarry_adder_loop[4].fa $end
$var wire 1 > A $end
$var wire 1 ? B $end
$var wire 1 @ Cin $end
$var wire 1 A Sum $end
$var wire 1 B Cout $end
$upscope $end
$scope module ripplecarry_adder_loop[5].fa $end
$var wire 1 C A $end
$var wire 1 D B $end
$var wire 1 E Cin $end
$var wire 1 F Sum $end
$var wire 1 G Cout $end
$upscope $end
$scope module ripplecarry_adder_loop[6].fa $end
$var wire 1 H A $end
$var wire 1 I B $end
$var wire 1 J Cin $end
$var wire 1 K Sum $end
$var wire 1 L Cout $end
$upscope $end
$scope module ripplecarry_adder_loop[7].fa $end
$var wire 1 M A $end
$var wire 1 N B $end
$var wire 1 O Cin $end
$var wire 1 P Sum $end
$var wire 1 Q Cout $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x!
bx "
x#
bx $
x%
bx &
b1 '
0(
bxz )
x*
1+
0,
x-
x.
x/
00
x1
x2
x3
x4
05
x6
x7
x8
x9
0:
x;
x<
x=
x>
0?
x@
xA
xB
xC
0D
xE
xF
xG
xH
0I
xJ
xK
xL
xM
0N
xO
xP
xQ
$end
